{"name": "DemoQA Practice Form Test", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <label title=\"\" for=\"gender-radio-1\" class=\"custom-control-label\">...</label> is not clickable at point (630, 658). Other element would receive the click: <iframe frameborder=\"0\" src=\"https://6c85b35570a16a24d332b49bc70b8ccd.safeframe.googlesyndication.com/safeframe/1-0-45/html/container.html\" id=\"google_ads_iframe_/21849154601,22343295815/Ad.Plus-Anchor_0\" title=\"3rd party ad content\" name=\"\" scrolling=\"no\" marginwidth=\"0\" marginheight=\"0\" width=\"728\" height=\"90\" data-is-safeframe=\"true\" sandbox=\"allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation\" allow=\"private-state-token-redemption;attribution-reporting\" aria-label=\"Advertisement\" tabindex=\"0\" data-google-container-id=\"1\" style=\"border: 0px; vertical-align: bottom;\" data-load-complete=\"true\"></iframe>\n  (Session info: chrome=138.0.7204.97); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#elementclickinterceptedexception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7ebca6f65+76917]\n\tGetHandleVerifier [0x0x7ff7ebca6fc0+77008]\n\t(No symbol) [0x0x7ff7eba59dea]\n\t(No symbol) [0x0x7ff7ebab8269]\n\t(No symbol) [0x0x7ff7ebab5c02]\n\t(No symbol) [0x0x7ff7ebab2c41]\n\t(No symbol) [0x0x7ff7ebab1b31]\n\t(No symbol) [0x0x7ff7ebaa3368]\n\t(No symbol) [0x0x7ff7ebad846a]\n\t(No symbol) [0x0x7ff7ebaa2c16]\n\t(No symbol) [0x0x7ff7ebad8680]\n\t(No symbol) [0x0x7ff7ebb0065c]\n\t(No symbol) [0x0x7ff7ebad8243]\n\t(No symbol) [0x0x7ff7ebaa1431]\n\t(No symbol) [0x0x7ff7ebaa21c3]\n\tGetHandleVerifier [0x0x7ff7ebf7d29d+3051437]\n\tGetHandleVerifier [0x0x7ff7ebf778f3+3028483]\n\tGetHandleVerifier [0x0x7ff7ebf9588d+3151261]\n\tGetHandleVerifier [0x0x7ff7ebcc182e+185662]\n\tGetHandleVerifier [0x0x7ff7ebcc96ef+218111]\n\tGetHandleVerifier [0x0x7ff7ebcafae4+112628]\n\tGetHandleVerifier [0x0x7ff7ebcafc99+113065]\n\tGetHandleVerifier [0x0x7ff7ebc96c68+10616]\n\tBaseThreadInitThunk [0x0x7ff938fce8d7+23]\n\tRtlUserThreadStart [0x0x7ff93b1bc34c+44]", "trace": "@allure.title(\"DemoQA Practice Form Test\")\n    @allure.description(\"This test fills out the basic fields in the DemoQA form using Selenium.\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_demoqa_form():\n        # Setup Chrome browser\n        service = Service(r\"C:\\Users\\athi\\Downloads\\chromedriver-win64\\chromedriver-win64\\chromedriver.exe\")\n        driver = webdriver.Chrome(service=service)\n        driver.maximize_window()\n    \n        with allure.step(\"Open DemoQA practice form\"):\n            driver.get(\"https://demoqa.com/automation-practice-form\")\n    \n        with allure.step(\"Fill First Name\"):\n            driver.find_element(By.ID, \"firstName\").send_keys(\"Athithyan\")\n            allure.attach(\"Athithyan\", name=\"First Name\", attachment_type=allure.attachment_type.TEXT)\n            time.sleep(1)\n    \n        with allure.step(\"Fill Last Name\"):\n            driver.find_element(By.ID, \"lastName\").send_keys(\"V\")\n            allure.attach(\"V\", name=\"Last Name\", attachment_type=allure.attachment_type.TEXT)\n            time.sleep(1)\n    \n        with allure.step(\"Fill Email\"):\n            driver.find_element(By.ID, \"userEmail\").send_keys(\"athithyanv402@gmail.com\")\n            allure.attach(\"athithyanv402@gmail.com\", name=\"Email\", attachment_type=allure.attachment_type.TEXT)\n            time.sleep(1)\n    \n        with allure.step(\"Select Gender: Male\"):\n>           driver.find_element(By.XPATH, \"//label[text()='Male']\").click()\n\nTest_10_Automation_report.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:120: in click\n    self._execute(Command.CLICK_ELEMENT)\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:573: in _execute\n    return self._parent.execute(command, params)\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:454: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001BDF5912C20>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...ff7ebc96c68+10616]\\\\n\\\\tBaseThreadInitThunk [0x0x7ff938fce8d7+23]\\\\n\\\\tRtlUserThreadStart [0x0x7ff93b1bc34c+44]\\\\n\"}}'}\n\n    def check_response(self, response: dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                try:\n                    value = json.loads(value_json)\n                    if isinstance(value, dict):\n                        if len(value) == 1:\n                            value = value[\"value\"]\n                        status = value.get(\"error\", None)\n                        if not status:\n                            status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                            message = value.get(\"value\") or value.get(\"message\")\n                            if not isinstance(message, str):\n                                value = message\n                                message = message.get(\"message\")\n                        else:\n                            message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <label title=\"\" for=\"gender-radio-1\" class=\"custom-control-label\">...</label> is not clickable at point (630, 658). Other element would receive the click: <iframe frameborder=\"0\" src=\"https://6c85b35570a16a24d332b49bc70b8ccd.safeframe.googlesyndication.com/safeframe/1-0-45/html/container.html\" id=\"google_ads_iframe_/21849154601,22343295815/Ad.Plus-Anchor_0\" title=\"3rd party ad content\" name=\"\" scrolling=\"no\" marginwidth=\"0\" marginheight=\"0\" width=\"728\" height=\"90\" data-is-safeframe=\"true\" sandbox=\"allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation\" allow=\"private-state-token-redemption;attribution-reporting\" aria-label=\"Advertisement\" tabindex=\"0\" data-google-container-id=\"1\" style=\"border: 0px; vertical-align: bottom;\" data-load-complete=\"true\"></iframe>\nE         (Session info: chrome=138.0.7204.97); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#elementclickinterceptedexception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff7ebca6f65+76917]\nE       \tGetHandleVerifier [0x0x7ff7ebca6fc0+77008]\nE       \t(No symbol) [0x0x7ff7eba59dea]\nE       \t(No symbol) [0x0x7ff7ebab8269]\nE       \t(No symbol) [0x0x7ff7ebab5c02]\nE       \t(No symbol) [0x0x7ff7ebab2c41]\nE       \t(No symbol) [0x0x7ff7ebab1b31]\nE       \t(No symbol) [0x0x7ff7ebaa3368]\nE       \t(No symbol) [0x0x7ff7ebad846a]\nE       \t(No symbol) [0x0x7ff7ebaa2c16]\nE       \t(No symbol) [0x0x7ff7ebad8680]\nE       \t(No symbol) [0x0x7ff7ebb0065c]\nE       \t(No symbol) [0x0x7ff7ebad8243]\nE       \t(No symbol) [0x0x7ff7ebaa1431]\nE       \t(No symbol) [0x0x7ff7ebaa21c3]\nE       \tGetHandleVerifier [0x0x7ff7ebf7d29d+3051437]\nE       \tGetHandleVerifier [0x0x7ff7ebf778f3+3028483]\nE       \tGetHandleVerifier [0x0x7ff7ebf9588d+3151261]\nE       \tGetHandleVerifier [0x0x7ff7ebcc182e+185662]\nE       \tGetHandleVerifier [0x0x7ff7ebcc96ef+218111]\nE       \tGetHandleVerifier [0x0x7ff7ebcafae4+112628]\nE       \tGetHandleVerifier [0x0x7ff7ebcafc99+113065]\nE       \tGetHandleVerifier [0x0x7ff7ebc96c68+10616]\nE       \tBaseThreadInitThunk [0x0x7ff938fce8d7+23]\nE       \tRtlUserThreadStart [0x0x7ff93b1bc34c+44]\n\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: ElementClickInterceptedException"}, "description": "This test fills out the basic fields in the DemoQA form using Selenium.", "steps": [{"name": "Open DemoQA practice form", "status": "passed", "start": 1751624454346, "stop": 1751624462517}, {"name": "Fill First Name", "status": "passed", "attachments": [{"name": "First Name", "source": "fc4b31b4-d2d9-4732-8af0-0660e976bf4e-attachment.txt", "type": "text/plain"}], "start": 1751624462517, "stop": 1751624463741}, {"name": "Fill Last Name", "status": "passed", "attachments": [{"name": "Last Name", "source": "d57d3e7f-1a3d-4d00-b34e-69cc51a81aa8-attachment.txt", "type": "text/plain"}], "start": 1751624463741, "stop": 1751624465000}, {"name": "Fill Email", "status": "passed", "attachments": [{"name": "Email", "source": "4b1d9000-fd35-4998-b94d-8d71732e6f3a-attachment.txt", "type": "text/plain"}], "start": 1751624465000, "stop": 1751624466138}, {"name": "Select Gender: Male", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <label title=\"\" for=\"gender-radio-1\" class=\"custom-control-label\">...</label> is not clickable at point (630, 658). Other element would receive the click: <iframe frameborder=\"0\" src=\"https://6c85b35570a16a24d332b49bc70b8ccd.safeframe.googlesyndication.com/safeframe/1-0-45/html/container.html\" id=\"google_ads_iframe_/21849154601,22343295815/Ad.Plus-Anchor_0\" title=\"3rd party ad content\" name=\"\" scrolling=\"no\" marginwidth=\"0\" marginheight=\"0\" width=\"728\" height=\"90\" data-is-safeframe=\"true\" sandbox=\"allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation\" allow=\"private-state-token-redemption;attribution-reporting\" aria-label=\"Advertisement\" tabindex=\"0\" data-google-container-id=\"1\" style=\"border: 0px; vertical-align: bottom;\" data-load-complete=\"true\"></iframe>\n  (Session info: chrome=138.0.7204.97); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#elementclickinterceptedexception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7ebca6f65+76917]\n\tGetHandleVerifier [0x0x7ff7ebca6fc0+77008]\n\t(No symbol) [0x0x7ff7eba59dea]\n\t(No symbol) [0x0x7ff7ebab8269]\n\t(No symbol) [0x0x7ff7ebab5c02]\n\t(No symbol) [0x0x7ff7ebab2c41]\n\t(No symbol) [0x0x7ff7ebab1b31]\n\t(No symbol) [0x0x7ff7ebaa3368]\n\t(No symbol) [0x0x7ff7ebad846a]\n\t(No symbol) [0x0x7ff7ebaa2c16]\n\t(No symbol) [0x0x7ff7ebad8680]\n\t(No symbol) [0x0x7ff7ebb0065c]\n\t(No symbol) [0x0x7ff7ebad8243]\n\t(No symbol) [0x0x7ff7ebaa1431]\n\t(No symbol) [0x0x7ff7ebaa21c3]\n\tGetHandleVerifier [0x0x7ff7ebf7d29d+3051437]\n\tGetHandleVerifier [0x0x7ff7ebf778f3+3028483]\n\tGetHandleVerifier [0x0x7ff7ebf9588d+3151261]\n\tGetHandleVerifier [0x0x7ff7ebcc182e+185662]\n\tGetHandleVerifier [0x0x7ff7ebcc96ef+218111]\n\tGetHandleVerifier [0x0x7ff7ebcafae4+112628]\n\tGetHandleVerifier [0x0x7ff7ebcafc99+113065]\n\tGetHandleVerifier [0x0x7ff7ebc96c68+10616]\n\tBaseThreadInitThunk [0x0x7ff938fce8d7+23]\n\tRtlUserThreadStart [0x0x7ff93b1bc34c+44]\n\n", "trace": "  File \"C:\\Users\\athi\\OneDrive\\Desktop\\Automation Testing\\Task-10\\Test_10_Automation_report.py\", line 37, in test_demoqa_form\n    driver.find_element(By.XPATH, \"//label[text()='Male']\").click()\n  File \"C:\\Users\\athi\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 120, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"C:\\Users\\athi\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 573, in _execute\n    return self._parent.execute(command, params)\n  File \"C:\\Users\\athi\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 454, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\athi\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1751624466138, "stop": 1751624467286}], "start": 1751624452995, "stop": 1751624467290, "uuid": "b8b6b655-b794-4a21-8853-787367c64c5d", "historyId": "5ea6b9711ecdbfeebfbbf0f2620de428", "testCaseId": "5ea6b9711ecdbfeebfbbf0f2620de428", "fullName": "Test_10_Automation_report#test_demoqa_form", "labels": [{"name": "severity", "value": "critical"}, {"name": "suite", "value": "Test_10_Automation_report"}, {"name": "host", "value": "DESKTOP-FJANE1E"}, {"name": "thread", "value": "12176-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_10_Automation_report"}]}